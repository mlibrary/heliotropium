03384nam a22004093i 450000500170000000600190001700700150003600800410005102000350009202000310012702000290015802400230018704000270021005000150023710000270025224500880027924600450036726400650041226400100047730000230048733600260051033700260053633800360056249000450059850400410064352016550068454201500233958800530248965000330254265000190257565000390259465500220263371000640265577001260271983000360284585600930288120180924154802.0m     o  d        cr unu||||||||180924t20192019miu     ob    001 0 eng d  a9780472125005qelectronic book  z9780472901043qopen access  z9780472131273qhardcover7 a10.3998/mpub.2doi  aMiUbengerdaepncMiU 4aP301.5.D371 aBrock, Kevin,eauthor.10aRhetorical code studies :bdiscovering arguments in and around code /cKevin Brock.30aDiscovering arguments in and around code 1aAnn Arbor, Michigan :bUniversity of Michigan Press,c[2019] 4cÃ2019  a1 online resource.  atextbtxt2rdacontent  acomputerbc2rdamedia  aonline resourcebcr2rdacarrier1 aSweetland digital rhetoric collaborative  aIncludes bibliographical references.3 a"Software developers work rhetorically to make meaning through the code they write. In some ways, writing code is like any other form of communication; in others, it proves to be new, exciting, and unique. In Rhetorical Code Studies, Kevin Brock explores how software code serves as meaningful communication through which software developers construct arguments that are made up of logical procedures and express both implicit and explicit claims as to how a given program operates.Â  Building on current scholarly work in digital rhetoric, software studies, and technical communication, Brock connects and continues ongoing conversations among rhetoricians, technical communicators, software studies scholars, and programming practitioners to demonstrate how software code and its surrounding discourse are highly rhetorical forms of communication. He considers examples ranging from large, well-known projects like Mozilla Firefox to small-scale programs like the "FizzBuzz" test common in manyÂ  programming job interviews. Undertaking specific examinations of code texts as well as the contexts surrounding their composition, Brock illuminates the variety and depth of rhetorical activity taking place in and around code, from individual differences in style to changes in large-scale organizational and community norms. Rhetorical Code Studies holds significant implications for digital communication, multimodal composition, and the cultural analysis of software and its creation. It will interest academics and students of writing, rhetoric, and software engineering as well as technical communicators and developers of all types of software."1 fThis work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International licenseuhttps://creativecommons.org/licenses/by-sa/4.0  aDescription based on information from publisher. 0aRhetoricxComputer programs. 0aCoding theory. 0aComputer softwarexSocial aspects. 4aElectronic books.22aMichigan Publishing (University of Michigan)eissuing body.08iSupplement (work):aBrock, Kevin.tRhetorical code studies : discovering arguments in and around code.h1 online resource 0aDigital rhetoric collaborative.40zAccess to the Michigan Publishing online version:uhttps://doi.org/10.3998/mpub.10019291